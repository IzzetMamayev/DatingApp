{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","(webpack)/hot sync nonrecursive ^\\.\\/log$","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_models/pagination.ts","./src/app/_resolvers/lists.resolver.ts","./src/app/_resolvers/member-detail.resolver.ts","./src/app/_resolvers/member-edit.resolver.ts","./src/app/_resolvers/member-list.resolver.ts","./src/app/_resolvers/messages.resolver.ts","./src/app/_services/alertify.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./log\": \"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/hot sync ^\\\\.\\\\/log$\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n    ) {}\n\n  canActivate(): boolean {\n\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You shall not pass!!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent>{\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return  confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class ListsResolver implements Resolve<User[]> {\r\n\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParams = 'Likers';\r\n\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParams).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private router: Router,\r\n        private alertify: AlertifyService, private authService: AuthService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving your data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n\r\n    constructor(private userService: UserService, private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = \"Unread\";\r\n\r\n    constructor(private userService: UserService, \r\n        private router: Router, \r\n        private authService: AuthService, \r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid, this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving messages');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallback();\n      } else {}\n    });\n}\n\nsuccess(message: string ) {\n  alertify.success(message);\n}\n\n\nerror(message: string ) {\n  alertify.error(message);\n}\n\n\nwarning(message: string ) {\n  alertify.warning(message);\n}\n\n\nmessage(message: string ) {\n  alertify.message(message);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assests/user.png')  ;  //photourl foto na kotoroye budut ssilatsa vse komponenti gde v etom yest nujda\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n\nconstructor(private http: HttpClient) { }\n\n    changeMemberPhoto(photoUrl: string) {\n      this.photoUrl.next(photoUrl);\n    }\n\n\n    login(model: any) {\n      return this.http.post(this.baseUrl + 'login', model)\n      .pipe(\n        map((response: any) => {\n            const user = response;\n            if (user) {\n              localStorage.setItem('token', user.token);\n              localStorage.setItem('user', JSON.stringify(user.user))\n              this.decodedToken = this.jwtelper.decodeToken(user.token);\n              this.currentUser = user.user;\n              console.log(this.decodedToken);\n              this.changeMemberPhoto(this.currentUser.photoUrl);\n            }\n        })\n        );\n    }\n\n    register(user: User) {\n      return this.http.post(this.baseUrl + 'register', user);\n    }\n\n\n    loggedIn() {\n      const token = localStorage.getItem('token');\n      return !this.jwtelper.isTokenExpired(token);  // if token is expired or no token here, it returns true\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl1 = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n\n    if (likesParam === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    return this.http.get<User[]>(this.baseUrl1 + 'users', { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n\n// baseUrl1 = environment.apiUrl;\n\n//   constructor(private http: HttpClient) {}\n\n//   getUsers(likeParams?): Observable<User[]>  {     \n  \n//     var params = new HttpParams();\n\n//     if(likeParams === 'Likers') {\n//       params = params.append('likers', 'true')\n//     }\n\n//     if(likeParams === 'Likees') {\n//       params = params.append('likees', 'true')\n//     }\n\n//     return this.http.get<User[]>(this.baseUrl1 + 'users/');\n\n//   }\n\n  getUser(id): Observable<User> {\n    // vozvrashat odnoqo usera\n    return this.http.get<User>(this.baseUrl1 + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl1 + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl1 + 'users/' + userId + '/photos/' + id + '/setMain', {}); // eto post request poetomu nujno otpravit pustoy obyekt\n  } \n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl1 + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl1 + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n\n\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl1 + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(\n          response => {\n            paginatedResult.result = response.body;\n            if(response.headers.get('Pagination') !== null) {\n              paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n            }\n            return paginatedResult;\n          }\n        )\n      )\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(\n      this.baseUrl1 + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n}","import { Component } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) {}\n\n    ngOnInit() {\n      const token = localStorage.getItem('token');\n      const  user: User = JSON.parse(localStorage.getItem('user'));\n      if (token) {\n        this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n      }\n\n      if (user) {\n        this.authService.currentUser = user;\n        this.authService.changeMemberPhoto(user.photoUrl);\n      }\n    }\n}\n","<app-nav></app-nav>\n<!-- <app-home></app-home> -->\n<router-outlet></router-outlet>\n","import {BrowserModule, HammerGestureConfig,HAMMER_GESTURE_CONFIG} from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Router } from \"@angular/router\";\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxGalleryModule } from \"@kolkov/ngx-gallery\";\n\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { BsDropdownModule, TabsModule, PaginationModule, ButtonsModule} from \"ngx-bootstrap\";\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\n\nimport { AppComponent } from \"./app.component\";\nimport { NavComponent } from \"./nav/nav.component\";\nimport { UserService } from \"./_services/user.service\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { ListsComponent } from \"./lists/lists.component\";\nimport { MessagesComponent } from \"./messages/messages.component\";\n// import { ValueComponent } from './value/value.component';\n\nimport { MemberListComponent } from \"./members/member-list/member-list.component\";\nimport { MemberCardComponent } from \"./members/member-card/member-card.component\";\nimport { MemberEditComponent } from \"./members/member-edit/member-edit.component\";\nimport { MemberDetailComponent } from \"./members/member-detail/member-detail.component\";\n\nimport { MemberDetailResolver } from \"./_resolvers/member-detail.resolver\";\nimport { MemberEditResolver } from \"./_resolvers/member-edit.resolver\";\nimport { MemberListResolver } from \"./_resolvers/member-list.resolver\";\nimport { ListsResolver } from './_resolvers/lists.resolver';\n\nimport { AuthService } from \"./_services/auth.service\";\nimport { appRoutes } from \"./routes\";\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { AlertifyService } from \"./_services/alertify.service\";\nimport { AuthGuard } from \"./_guards/auth.guard\";\n// import { NgxGalleryModule } from \"@nomadreservations/ngx-gallery\";\n\nimport { PreventUnsavedChanges } from \"./_guards/prevent-unsaved-changes.guard\";\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\n// import { TimeAgoPipe } from 'time-ago-pipe';\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\n\nexport class CustomHammerConfig extends HammerGestureConfig {\n  ovverides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  };\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    ListsComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberDetailComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    MemberMessagesComponent\n    // TimeAgoPipe\n    \n  ],\n  imports: [\n    BrowserModule,\n    TimeagoModule.forRoot(),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    FileUploadModule,\n    ButtonsModule,\n    NgxGalleryModule,\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: [\"localhost:5000\"],\n        blacklistedRoutes: [\"localhost:500/api/auth\"]\n      }\n    })\n  ],\n\n  providers: [\n    AuthService,\n    UserService,\n    AlertifyService,\n    AuthGuard,\n    UserService,\n    MemberListResolver,\n    MemberDetailResolver,\n    MemberEditResolver,\n    ListsResolver,\n    PreventUnsavedChanges,\n    MessagesResolver,\n    { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n  ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe(response => {\n      this.values = response;\n    }, error => {\n      console.log(error);\n    }\n);\n  }\n\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n\n}\n"," <div class=\"container mt-5\">\n   <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\n    <h1>Find frinds</h1>\n    <p class=\"lead\">All you need to do is sign up!</p>\n     <div class=\"text-center\">\n        <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n        <button class=\"btn btn-info btn-lg\">Learn More</button>\n     </div>\n   </div>\n\n   <div *ngIf=\"registerMode\" class=\"container\">\n     <div class=\"row justify-content-center\">\n       <div class=\"col-4\">\n\n        <app-register [valuesFromHome]=\"values\" (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n\n       </div>\n      </div>\n    </div> \n </div>\n\n <!-- <p *ngFor=\"let value of values\">\n  {{value.name}}\n </p>\n -->\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();   \n  }\n}\n","<div class=\"text-center mt-3\">\n  <!-- <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2> -->\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like MEEEE</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n    <app-member-card [user]=\"user\"></app-member-card>\n  </div>\n</div>\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" \n    [totalItems]=\"pagination.totalItems\" \n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\" \n    (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n@Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked: ' + this.user.knownAs)\n    }, error => {\n      this.alertify.error(error);\n    })\n  }\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n\n    <ul class=\"list-inline member-icons animate text-center\">\n\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/',user.id]\"><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\"><i class=\"fa fa-envelope\"></i></button></li>\n\n    </ul>\n  </div>\n\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"> <i class=\"fa fa-user\"></i> {{user.knownAs}}, {{user.age}} </h6>\n    <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n// import { ElementRef, Renderer2 } from '@angular/core';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.galleryOptions = [{\n      width: '500px',\n      height: '500px',\n      imagePercent: 100,\n      thumbnailsColumns: 4,\n      imageAnimation: NgxGalleryAnimation.Slide,\n      preview: false\n\n    }];\n\n    this.galleryImages = this.getimages() ;\n  }\n\n  getimages() {\n    const imageUrls = [];\n    for (const photo of this.user.photos) {\n      imageUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n    return imageUrls;\n  }\n\n  // members/4      privedenniy nije variant koda uje ne nujne dlya vozvrasheniya dannix s servera ispolzuyem vishe pokazanniy\n  // loadUser() {\n  //   this.userService.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\n  //     this.user = user;\n  //   }, error => {\n  //     this.alertify.error(error);\n  //   });\n  // }\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl||'../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n\n          <div>\n            <strong>Member since:</strong>\n            <p>{{user.created | date}}</p>\n          </div>\n\n          <div class=\"card-footer\">\n            <div class=\"btn-group d-flex\">\n              <button class=\"btn btn-primary w-100\">Like</button>\n              <button class=\"btn btn-success w-100\">Message</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n  \n          <tab heading=\"About {{user.knownAs}}\">\n            <h4>Description</h4>\n            <p>{{user!.introduction}}</p>\n            <h4>Looking For</h4>\n            <p>{{user.lookingFor}}</p>\n          </tab>\n  \n          <tab heading=\"Interests\">\n            <h4>Interests</h4>\n            <p>{{user.interests}}</p>\n          </tab>\n  \n          <tab heading=\"Photos\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>            \n          </tab>\n  \n          <tab heading=\"Messages\">\n            <app-member-messages> [recipientId]=\"user.id\" </app-member-messages>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n\n  </div>\n</div>","import { Component, OnInit, ViewChild, HostListener } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/_models/user\";\nimport { AlertifyService } from \"src/app/_services/alertify.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from \"src/app/_services/auth.service\";\nimport { UserService } from \"src/app/_services/user.service\";\n\n@Component({\n  selector: \"app-member-edit\",\n  templateUrl: \"./member-edit.component.html\",\n  styleUrls: [\"./member-edit.component.css\"]\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild(\"editForm\", { static: true }) editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener(\"window:beforeunload\", [\"$event\"])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data[\"user\"];\n    });\n\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() { \n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.alertify.success(\"Profile update success!\");\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n\n    <div class=\"col-sm-4\">\n      <h1>Your Profile</h1>\n    </div>\n\n    <div class=\"col-sm-8\">\n      <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n        <strong>Information: </strong>You have made changes, any unsaved changes will be lost!s\n      </div>\n    </div>\n\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\"> \n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n\n          <div>\n            <strong>Member since:</strong>\n            <p>{{user.created | date}}</p>\n          </div>\n\n          <div class=\"card-footer\">\n            <button form=\"editForm\" [disabled]=\"!editForm.dirty\" class=\"btn btn-success btn-block\">Save Changes</button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n\n          <tab heading=\"Edit Profile\">\n\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n\n              <h4>Description</h4>\n              <textarea name=\"introduction\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.introduction\"></textarea>\n\n              <h4>Looking For</h4>\n              <textarea name=\"lookingFor\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"></textarea>\n\n              <h4>Interests</h4>\n              <textarea name=\"interests\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.interests\"></textarea>\n\n              <h4>Location Details:</h4>\n              <div class=\"form-inline\">\n                <label for=\"city\">City</label>\n                <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\">\n                <label for=\"country\">Country</label>\n                <input class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"user.country\">\n              </div>\n\n            </form>\n          </tab>\n\n          <tab heading=\"Edit Photos\">\n            <app-photo-editor [photos]=\"user.photos\" \n              (getMemberPhotoChange)=\"updateMainPhoto($event)\"></app-photo-editor>\n          </tab>\n\n\n        </tabset>\n      </div>\n    </div>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '../../../../node_modules/@angular/router';\nimport { Pagination, PaginatedResult } from '../../_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      \n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    console.log(this.pagination.currentPage);\n    this.loadUsers();   \n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.userParams\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n  \n\n}\n\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"minAge\">Age From</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n          [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n      </div>\n\n      <div class=\"form-group px-2\">\n        <label for=\"maxAge\">Age To</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\n           [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n      </div>\n\n      <div class=\"form-group px-2\">\n        <label for=\"gender\">Show: </label>\n        <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n          [(ngModel)]=\"userParams.gender\" name=\"gender\">\n          <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n            {{gender.display}}\n          </option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n      <button type=\"button\" class=\"btn btn-info\" (click)=\"resetFilters()\" style=\"margin-left:10px\">\n          Reset Filter\n      </button>\n      <div class=\"col\">\n        <div class=\"btn-group float-right\">\n          <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\"\n            [(ngModel)]=\"userParams.orderBy\" (click)=\"loadUsers()\" btnRadio=\"lastActive\">Last Active</button>\n          <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\"\n            [(ngModel)]=\"userParams.orderBy\" (click)=\"loadUsers()\" btnRadio=\"created\">Newest Members</button>\n        </div>\n      </div>\n\n    </form>\n    <br>\n\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n    <app-member-card [user]=\"user\"></app-member-card>\n  </div>\n</div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    total-items=\"totalItems\"\n    ngDefaultControl [(ngModel)]=\"pagination.currentPage\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    ngDefaultControl\n  previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() \n  recipientId: number;\n  messages: Message[];\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .subscribe(messages => {\n        this.messages = messages;\n      }, error => {\n        this.alertify.error(error);\n      })\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-lefts\">\n            <img\n              src=\"{{ message.senderPhotoUrl }}\"\n              alt=\"{{ message.senderKnownAs }}\"\n              class=\"rounded-circle\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{ message.senderKnownAs }}</strong>\n              <small class=\"text-muted float-left\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n\n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n            <img\n              src=\"{{ message.senderPhotoUrl }}\"\n              alt=\"{{ message.senderKnownAs }}\"\n              class=\"rounded-circle\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\"\n                  >(unread)</span\n                >\n                <span *ngIf=\"message.isRead\" class=\"text-success\"\n                  >(Read {{ message.dateRead | timeago }})</span\n                >\n              </small>\n              <strong class=\"primary-font float-right\">{{\n                message.senderKnownAs\n              }}</strong>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form >\n      <div class=\"input-group\">\n        <input\n         \n          class=\"form-control input-sm\"\n          placeholder=\"send a private message\"\n        />\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-primary\">\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../../_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) =>{file.withCredentials = false;};\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n\n        this.photos.push(photo);\n\n        if(photo.isMain){\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    }\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p =>p.id === id), 1);\n        this.alertify.success('Photo has been deleted');\n      }, error => {\n        this.alertify.error('Failed to delete the photo');\n      });\n    });\n  }\n\n}\n\n\n\n\n\n// uploader:FileUploader;\n// hasBaseDropZoneOver:boolean;\n// hasAnotherDropZoneOver:boolean;\n// response:string;\n\n// constructor (){\n//   this.uploader = new FileUploader({\n//     url: URL,\n//     disableMultipart: true, // 'DisableMultipart' must be 'true' for formatDataFunction to be called.\n//     formatDataFunctionIsAsync: true,\n//     formatDataFunction: async (item) => {\n//       return new Promise( (resolve, reject) => {\n//         resolve({\n//           name: item._file.name,\n//           length: item._file.size,\n//           contentType: item._file.type,\n//           date: new Date()\n//         });\n//       });\n//     }\n//   });\n\n//   this.hasBaseDropZoneOver = false;\n//   this.hasAnotherDropZoneOver = false;\n\n//   this.response = '';\n\n//   this.uploader.response.subscribe( res => this.response = res );\n// }\n\n// public fileOverBase(e:any):void {\n//   this.hasBaseDropZoneOver = e;\n// }\n\n","<div class=\"row\">\n\n    <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n        <img src=\"{{photo.url}}\" class=\"img-thumbnail p-1\" alt=\"\">\n        <div class=\"text-center\">\n            <button type=\"button\" class=\"btn btn-sm mr-1\" (click)=\"setMainPhoto(photo)\"\n                [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n                [disabled]=\"photo.isMain\">Main</button>\n            <button type=\"button\" class=\"btn btn-sm btn-danger\" \n                (click)=\"deletePhoto(photo.id)\"\n                [disabled]=\"photo.isMain\"\n                ><i class=\"fa fa-trash-o\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n    <div class=\"col-md-3 mb-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x\"></i>\n            Drop Photos here\n        </div>\n\n        <!-- <div ng2FileDrop\n       [ngClass]=\"{'another-file-over-class': hasAnotherDropZoneOver}\"\n       (fileOver)=\"fileOverAnother($event)\"\n       [uploader]=\"uploader\"\n       class=\"well my-drop-zone\">\n      Another drop zone\n  </div> -->\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n</div>\n\n<div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n                <!-- <th>Progress</th> -->\n                <th>Status</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                <!-- <td *ngIf=\"uploader.options.isHTML5\">\n              <div class=\"progress\" style=\"margin-bottom: 0;\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n              </div>\n          </td>\n          <td class=\"text-center\">\n              <span *ngIf=\"item.isSuccess\"><i class=\"glyphicon glyphicon-ok\"></i></span>\n              <span *ngIf=\"item.isCancel\"><i class=\"glyphicon glyphicon-ban-circle\"></i></span>\n              <span *ngIf=\"item.isError\"><i class=\"glyphicon glyphicon-remove\"></i></span>\n          </td> -->\n                <td nowrap>\n                    <button type=\"button\" class=\"btn btn-success btn-xs\" (click)=\"item.upload()\"\n                        [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n                        <span class=\"fa fa-upload\"></span> Upload\n                    </button>\n                    <button type=\"button\" class=\"btn btn-warning btn-xs\" (click)=\"item.cancel()\"\n                        [disabled]=\"!item.isUploading\">\n                        <span class=\"fa fa-ban\"></span> Cancel\n                    </button>\n                    <button type=\"button\" class=\"btn btn-danger btn-xs\" (click)=\"item.remove()\">\n                        <span class=\"fa fa-trash\"></span> Remove\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <div>\n        <div>\n            Queue progress:\n            <div class=\"progress mb-4\">\n                <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n            [disabled]=\"!uploader.getNotUploadedItems().length\">\n            <span class=\"fa fa-upload\"></span> Upload all\n        </button>\n        <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n            [disabled]=\"!uploader.isUploading\">\n            <span class=\"fa fa-ban\"></span> Cancel all\n        </button>\n        <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n            [disabled]=\"!uploader.queue.length\">\n            <span class=\"fa fa-trash\"></span> Remove all\n        </button>\n    </div>\n\n</div>","  \nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService\n      .getMessages(\n        this.authService.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.messageContainer\n      )\n      .subscribe(\n        (res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error); \n        }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n\n}","\n<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Unread\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Inbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Outbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 30%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Received</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr\n        *ngFor=\"let message of messages\"\n        [routerLink]=\"[\n          '/members',\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId\n        ]\"\n        [queryParams]=\"{ tab: 3 }\"\n      >\n        <td>{{ message.content }}</td>\n        <td>\n          <div *ngIf=\"messageContainer != 'Outbox'\">\n            <img\n              src=\"{{ message?.senderPhotoUrl }}\"\n              class=\"img-circle rounded-circle mr-1\"\n            />\n            <strong>{{ message.senderKnownAs }}</strong>\n          </div>\n          <div *ngIf=\"messageContainer == 'Outbox'\">\n            <img\n              src=\"{{ message?.recipientPhotoUrl }}\"\n              class=\"img-circle rounded-circle mr-1\"\n            />\n            <strong>{{ message.recipientKnownAs }}</strong>\n          </div>\n        </td>\n        <td>{{ message.messageSent | timeago }}</td>\n        <td>\n          <button\n            class=\"btn btn-danger\"\n            (click)=\"$event.stopPropagation()\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    ngDefaultControl [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router ) {}\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Logged in successfully');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n\n\n  }\n\n  loggedIn() {\n\n    return this.authService.loggedIn();\n\n    // const token = localStorage.getItem('token');\n    // return !!token;\n  }\n\n  logout() {\n    localStorage.removeItem('token');  // udaalit danniy s localstorage posle toqo kak sdelal logout\n    localStorage.removeItem('token');  // udaalit danniy s localstorage posle toqo kak sdelal logout\n    this.authService.decodedToken = null;\n    this.authService.decodedToken = null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <div class=\"container\">\n\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      \n      <li class=\"nav-item active\" routerLinkActive=\"active\" >\n        <a class=\"nav-link\" [routerLink]=\"['/members']\" >Matches <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" >\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messages </a>\n      </li>\n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <span>\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\">\n      </span>\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n        Welcome {{authService.decodedToken.unique_name | titlecase}}\n      </a>  \n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\">\n          <i class=\"fa fa-user\"></i>Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" href=\"#\" (click)=\"logout()\">\n          <i class=\"fa fa-sign-out\"></i>Logout</a>\n      </div> \n    </div>\n\n\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\n      <input class=\"form-control mr-sm-2\" type=\"text\"name=\"username\" #username=\"ngModel\"\n       placeholder=\"Username\"required [(ngModel)]=\"model.username\">\n      <input class=\"form-control mr-sm-2\" type=\"password\" name=\"password\" #password=\"ngModel\"\n       placeholder=\"Password\" required [(ngModel)]=\"model.password\">\n      <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n\n  </div>\n  \n  </nav>\n\n\n\n  \n  <!-- <pre>\n      Form Valid: {{loginForm.valid}}  \n      Form Touched:{{loginForm.touched}}\n      Form Dirty: {{loginForm.dirty}}\n      Form Values: {{loginForm.value | json}}   \n\n  </pre> -->\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n}) \nexport class RegisterComponent implements OnInit {\n  @Input() valuesFromHome: any;\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;  // Partial ispolzuyetsa ctobi properties vse bili optional\n\n  constructor(\n     private authService: AuthService,\n     private alertify: AlertifyService,\n     private router: Router,\n     private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    },\n    this.createregisterForm(); \n    // this.registerForm = new FormGroup({\n    //   username: new FormControl('', Validators.required),\n    //   password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n    //   confirmPassword: new FormControl('', Validators.required)\n    // }, this.passwordMatchValidator );\n  }\n\n  register() {\n    if (this.registerForm.valid)\n    {\n       this.user = Object.assign({}, this.registerForm.value);\n       this.authService.register(this.user).subscribe(() => {\n         this.alertify.success('Regiration succesfully');\n       }, error => {\n         this.alertify.error(error);\n       }, () => {\n         this.authService.login(this.user).subscribe(() => {\n           this.router.navigate(['/members']);\n         });\n       });\n    }\n    // this.authService.register(this.model).subscribe(() => {\n    //   this.alertify.success('registration succesful');\n    // }, error => {\n    //   this.alertify.error(error);\n    // });\n    console.log(this.registerForm.value);\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'missmatch': true};\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    console.log('cancelled');\n  }\n\n  createregisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'], \n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator}\n    )\n  }\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr>\n\n<!-- Gender Radio button -->\n <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div>\n\n\n <!-- Known as -->\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n\n<!-- DAte of Birth -->\n  <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\n        placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig]=\"bsConfig\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n    </div>\n\n\n<!-- City and country -->\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n\n\n  \n<!-- Username -->\n  <div class=\"form-group\">\n    <input type=\"text\" \n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\"\n    class=\"form-control\" \n    formControlName=\"username\" \n    placeholder=\"Username\">\n    <div class=\"invalid-feedback\">Please choose an username</div>\n  </div>\n\n  <!-- <div class=\"form-group\">\n    <label for=\"favouriteValue\">What is your favourite value></label>\n    <select class=\"form-control\" id=\"favouriteValue\">\n      <option *ngFor=\"let value of valuesFromHome\" [value]=\"value\">{{value.name}}</option>\n    </select>\n  </div> -->\n\n\n  <!-- Password -->\n  <div class=\"form-group\">\n    <input type=\"password\" \n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\"\n    class=\"form-control\" \n    formControlName=\"password\" \n    placeholder=\"Password\">\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\" registerForm.get('password').hasError('required') \n        && registerForm.get('password').touched\">Password is required</div>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\" registerForm.get('password').hasError('minlength') \n        && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\" registerForm.get('password').hasError('maxlength') \n        && registerForm.get('password').touched\">Password cannot exceed 8 characters</div>\n\n  </div>\n\n\n<!-- Confirm Password -->\n  <div class=\"form-group\">\n    <input type=\"password\"\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors \n    && registerForm.get('confirmPassword').touched \n    || registerForm.get('confirmPassword').touched \n    && registerForm.hasError('mismatch')}\"\n    class=\"form-control\" \n    formControlName=\"confirmPassword\" \n    placeholder=\"Confirm Password\">\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\"registerForm.get('confirmPassword').hasError('required') \n        && registerForm.get('confirmPassword').touched\">Password is required</div>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\"registerForm.hasError('mismatch') \n        && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n\n  </div>\n\n  \n\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" type=\"submit\">Register</button>\n    <button class=\"btn btn-default\" type=\"button \" (click)=\"cancel()\">Cancel</button>\n  </div>\n  \n</form>\n<p>Form value: {{registerForm.value | json}}</p>\n<p>Form value: {{registerForm.status | json}}</p>\n","import {Routes} from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path: 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\r\n            {path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver}},\r\n            {path: 'member/edit', component: MemberEditComponent, resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n            {path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\r\n            {path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}},\r\n\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full'},\r\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}